syntax = "proto3";

package artist;

option go_package = "github.com/v0vc/go-music-grpc;artist";

message Artist {
  int64 id = 1;
  uint32 siteId = 2;
  string artistId = 3;
  string title = 4;
  bytes thumbnail = 5;
  bool userAdded = 6;
  int32 newAlbs = 7;
  repeated Album albums = 8;
  repeated Playlist playlists = 9;
  repeated string deletedAlb = 10;
}

message Album {
  int64 id = 1;
  string albumId = 2;
  string title = 3;
  string subTitle = 4;
  string releaseDate = 5;
  int32 releaseType = 6;
  int32 likeCount = 7;
  int32 viewCount = 8;
  bytes thumbnail = 9;
  int32 syncState = 10;
  repeated string artistIds = 11;
  float quality = 12;
}

message Playlist {
  int64 id = 1;
  string playlistId = 2;
  string title = 3;
  bytes thumbnail = 4;
  int32 playlistType = 5;
  repeated string videoIds = 6;
}

message SyncArtistRequest {
  uint32 siteId = 1;
  string artistId = 2;
  bool isAdd = 3;
}

message SyncArtistResponse {
  repeated Artist artists = 1;
}

message ReadArtistAlbumRequest {
  uint32 siteId = 1;
  string artistId = 2;
  bool newOnly = 3;
}

message ReadArtistAlbumResponse {
  repeated Album releases = 1;
  repeated Playlist playlists = 2;
}

message DeleteArtistRequest {
  uint32 siteId = 1;
  string artistId = 2;
}

message DeleteArtistResponse {
  int64 rowsAffected = 1;
}

message ClearSyncRequest {
  uint32 siteId = 1;
}

message ClearSyncResponse {
  int64 rowsAffected = 1;
}

message DownloadAlbumsRequest {
  uint32 siteId = 1;
  repeated string albumIds = 2;
  string trackQuality = 3;
}

message DownloadArtistRequest {
  uint32 siteId = 1;
  string artistId = 2;
  string trackQuality = 3;
}

message DownloadAlbumsResponse {
  map<string, string> Downloaded = 1;
}

message DownloadTracksResponse {
  map<string, string> Downloaded = 1;
}

message ListArtistRequest {
  uint32 siteId = 1;
}

message ListArtistResponse {
  repeated Artist artists = 1;
}

service ArtistService {
  rpc SyncArtist (SyncArtistRequest) returns (SyncArtistResponse);
  rpc ReadArtistAlbums (ReadArtistAlbumRequest) returns (ReadArtistAlbumResponse);
  rpc DeleteArtist (DeleteArtistRequest) returns (DeleteArtistResponse);
  rpc ClearSync (ClearSyncRequest) returns (ClearSyncResponse);
  rpc DownloadAlbums (DownloadAlbumsRequest) returns (DownloadAlbumsResponse);
  rpc DownloadArtist (DownloadArtistRequest) returns (DownloadAlbumsResponse);
  rpc ListArtist (ListArtistRequest) returns (ListArtistResponse);
}